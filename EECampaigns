public class Campaigns
    {
        public class Campaign
        {
            public string Id;
            public string Title;
            public string Discription;
            public bool IsCompleted;
            public string Difficlty;
            public CampaignWorld[] Worlds;
            public string Badge;
            public Campaign(string id, string title, string discription, int difficlty, bool completed, CampaignWorld[] worlds, string badge)
            {
                Id = id;
                Title = title;
                Discription = discription;
                IsCompleted = completed;
                Difficlty = ConvertDifficlty(difficlty);
                Worlds = worlds;
                Badge = badge;
            }
        }
        public class CampaignWorld
        {
            public string WorldId;
            public string Name;
            public string Owner;
            public string Difficly;
            public int Tier;
            public bool Locked;
            public bool IsCompleted;
            public string Rewards;
            public CampaignWorld(string id, string name, string owner, int difficlty, int tier, bool locked, bool completed, CampaignReward[] rewards)
            {
                WorldId = id;
                Name = name;
                Owner = owner;
                Difficly = ConvertDifficlty(difficlty);
                Tier = tier;
                Locked = locked;
                IsCompleted = completed;
                Rewards = "";
                for (int i = 0; i < rewards.Length; i++)
                {
                    if (i == 0)
                        Rewards += rewards[i].Title;
                    else
                        Rewards += ", " + rewards[i].Title;
                }
            }

        }
        public class CampaignReward
        {
            public string Title;
            public string Type;
            public uint Amount;
            public CampaignReward(string type, uint amount)
            {
                Type = type;
                Amount = amount;
                switch (type)
                {
                    case "maxEnergy":
                    case "energyRefill":
                    case "energy":
                        var Title = "";
                        if (type == "maxEnergy")
                            Title = "+" + amount + " Max";
                        if (type == "energyRefill")
                            Title = "Refill";
                        if (type == "energy")
                            Title = "+" + amount;
                        break;
                    case "gems":
                        Title = "+" + amount + " Gems";
                        break;
                    default:
                        if (type.Substring(0, 5) == "brick")
                            Title = $"Block: \"{type}\"";
                        else if (type.Substring(0, 6) == "smiley")
                            Title = $"Smiley: \"{type}\"";
                        else if (type.Substring(0, 5) == "world")
                            Title = "+" + GetWorldSize(type);
                        break;
                }
            }

        }
        public static string GetWorldSize(string id)
        {
            switch (id)
            {
                case "world0":
                    return "25x25 World";
                case "world1":
                    return "50x50 World";
                case "world2":
                    return "100x100 World";
                case "world3":
                    return "200x200 World";
                case "world4":
                    return "400x50 World";
                case "world5":
                    return "400x200 World";
                case "world6":
                    return "100x400 World";
                case "world7":
                    return "636x50 World";
                case "world8":
                    return "110x110 World";
                case "world11":
                    return "300x300 World";
                default:
                    return "";
            }
        }
        public static string ConvertDifficlty(int diff)
        {
            switch (diff)
            {
                case 0: return "Basic";
                case 1: return "Basic - Easy";
                case 2: return "Easy";
                case 3: return "Easy - Medium";
                case 4: return "Medium";
                case 5: return "Medium - Hard";
                case 6: return "Hard";
                case 7: return "Hard -Extreme";
                case 8: return "Extreme";
                default: return "Unknown";
            }
        }
        public static Campaign[] Parse(Message m)
        {
            if (m == null) throw new ArgumentNullException(nameof(m));
            if (m.Type != "getCampaigns") throw new ArgumentException("Wrong Message type", nameof(m));
            List<Campaign> campaigns = new List<Campaign>();
            uint i = 0;
            while (i < m.Count)
            {
                var id = m[i++].ToString();
                var title = m[i++].ToString();
                var discription = m[i++].ToString();
                var difficlty = m.GetInt(i++);
                var completed = m.GetBoolean(i++);
                var TotalWorlds = m.GetInt(i++);
                var worlds = new CampaignWorld[TotalWorlds];
                for (int j = 0; j < TotalWorlds; j++)
                {
                    var worldid = m[i++].ToString();
                    var name = m[i++].ToString();
                    var creators = m[i++].ToString();
                    var worlddifficlty = m.GetInt(i++);
                    var tier = m.GetInt(i++);
                    var imagelink = m[i++].ToString(); //unused
                    var status = m.GetInt(i++);
                    var TotalRewards = m.GetInt(i++);
                    var rewards = new CampaignReward[TotalRewards];
                    for (int r = 0; r < TotalRewards; r++)
                    {
                        var type = m[i++].ToString();
                        var amount = m.GetUInt(i++);
                        var reward = new CampaignReward(type, amount);
                        rewards[r] = reward;
                    }
                    var world = new CampaignWorld(worldid, name, creators, worlddifficlty, tier, status == -1, status == 1, rewards);
                    worlds[j] = world;
                }
                var badge = m[i++].ToString();
                var campaign = new Campaign(id, title, discription, difficlty, completed, worlds, badge);
                campaigns.Add(campaign);
            }
            return campaigns.ToArray();
        }

    }
